<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.psd.rendering.drs</groupId>
		<artifactId>dynamic-render-service</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>dynamic-render-service-web</artifactId>
	<packaging>war</packaging>
	<name>dynamic-render-service-web</name>

	<properties>
		<jersey.version>2.9</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<saperion.common.version>1.4.0-SNAPSHOT</saperion.common.version>
		<render.exe.version>1.4-SNAPSHOT</render.exe.version>
		<skipITs>false</skipITs>
		<servlet-container-port>9000</servlet-container-port>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Jersey and servlet API related -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>

		<!-- Saperion -->
		<dependency>
			<groupId>com.saperion.common.lang</groupId>
			<artifactId>saperion-common-lang</artifactId>
			<version>${saperion.common.version}</version>
		</dependency>

		<dependency>
			<groupId>com.saperion.common.config</groupId>
			<artifactId>saperion-common-config</artifactId>
			<version>${saperion.common.version}</version>
		</dependency>

		<dependency>
			<groupId>com.saperion.rendering</groupId>
			<artifactId>render-engines-external</artifactId>
			<version>2.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.saperion.cache</groupId>
			<artifactId>sacache</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- OSGi -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>4.3.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.4</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>com.googlecode.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<version>1.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-external</artifactId>
		</dependency>

		<dependency>
			<groupId>com.saperion.common.test</groupId>
			<artifactId>saperion-common-test</artifactId>
			<version>${saperion.common.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>dynamic-render-service-web</finalName>
		<plugins>

			<!-- to generate the MANIFEST-FILE required by the bundle -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.0.1</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<manifestLocation>${project.build.directory}/META-INF</manifestLocation>
					<supportedProjectTypes>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Bundle-ClassPath>.,WEB-INF/classes,{maven-dependencies}</Bundle-ClassPath>
						<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
						<Embed-Directory>WEB-INF/lib</Embed-Directory>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>

						<Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>
						<!-- <Import-Package>com.sun.jersey.api.core,com.sun.jersey.spi.container.servlet,*</Import-Package>
						<Export-Package>com.sun.jersey.samples.helloworld</Export-Package> -->
						<Webapp-Context>renderservice</Webapp-Context>
						<Web-ContextPath>/renderservice</Web-ContextPath>
						<Bundle-Activator>com.sun.jersey.samples.helloworld.WebAppContextListener</Bundle-Activator>
					</instructions>
				</configuration>

			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<attachClasses>true</attachClasses>
					<archive>
						<manifestFile>${project.build.directory}/META-INF/MANIFEST.MF</manifestFile>
						<manifestEntries>
							<Bundle-ClassPath>WEB-INF/classes</Bundle-ClassPath>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<complianceLevel>1.7</complianceLevel>
					<encoding>utf-8</encoding>
					<sources>
						<source>
							<basedir>${basedir}/src/main/java</basedir>
							<includes>
								<include>**/*.java</include>
							</includes>
						</source>
					</sources>
					<showWeaveInfo>true</showWeaveInfo>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.saperion.rendering</groupId>
									<artifactId>render-exe</artifactId>
									<version>${render.exe.version}</version>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/render-executable</outputDirectory>
									<includes>**/*</includes>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<filtering>true</filtering>
							<includes>
								<include>**/application-version.txt</include>
								<include>logback.xml</include>
								<include>config/**</include>
							</includes>
						</resource>
						<resource>
							<directory>${project.build.directory}/render-executable</directory>
							<targetPath>render-executable</targetPath>
						</resource>
					</webResources>
					<archiveClasses>true</archiveClasses>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<!-- needed to execute integration tests (test-classes ending with IT) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<skip>${skipITs}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<container>
						<containerId>tomcat7x</containerId>
					</container>
					<skip>${skipTests}</skip>
					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<type>war</type>
							<pingURL>http://localhost:${servlet-container-port}/renderservice</pingURL>
							<pingTimeout>20000</pingTimeout>
							<properties>
								<context>/renderservice</context>
							</properties>
						</deployable>
					</deployables>
					<configuration>
						<properties>
							<cargo.servlet.port>${servlet-container-port}</cargo.servlet.port>
						</properties>
					</configuration>
				</configuration>
			</plugin>


		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.4.5</version>
					<configuration>
						<skip>${skipITs}</skip>
					</configuration>
					<executions>
						<execution>
							<id>start-container</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-container</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.keyboardsamurais.maven</groupId>
										<artifactId>maven-timestamp-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>create</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>